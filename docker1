1.Docker组件与元素
  组件:
    1>Docker Client: 用户界面,支持用户与Docker Daemon之间通信.
    2>Docker Daemon: 运行于主机上,处理服务请求
    3>Docker Index : 中央registry,支持拥有公有与私有访问权限的Docker容器镜像的备份.
    
    总结: 组件处理用户端的任务
  基本元素:
    1>Docker Containers : 负责应用程序的运行,包括操作系统,用户添加的文件以及元数据
    2>Docker Images: 一个只读模板,用来运行Docker容器.
    3>Docker File: 文件指令集,用来说明如何自动创建Docker镜像.
    
2.Docker使用一下操作系统得功能来提高容器技术效率:
    1>Namespaces: 充当隔离的第一级.确保一个容器中运行一个进程而且不能看到或影响容器外的其他进程.
    2>Control Groups: 是LXC的重要组成部分,具有资源核算与限制的关键功能
    3>UnionFS(文件系统)作为容器的构建块.为了支持Docker的轻量级以及速度快的特性,它创建了用户层.
3.运行任何程序都需要:
    1>构建一个镜像
    2>运行容器
    
    运行从Docker Client命令开始,Docker Client使用Docker二进制文件.在基础层面上,Docker client告诉Docker Daemon需要
    创建的镜像以及需要在容器内运行得命令.当Daemon接收到创建镜像的信息号后,会做如下操作:
      1>构建镜像: Docker Image是一个构建容器的只读模板,它包含了容器启动所需的所有信息,包括运行程序和配置数据.，每个镜像都
      源于一个基本的镜像,然后根据Dockerfile中的指令创建模板.对于每个指令,在镜像上创建爱你一个新的层面.一旦镜像创建完成，就可以
      将它们推送到中央registry：Docker Index，以供他人使用。然而，Docker Index为镜像提供了两个级别的访问权限：公有访问和私有访问。\
      你可以将镜像存储在私有仓库，Docker官网有私有仓库的套餐可以供你选择。总之，公有仓库是可搜索和可重复使用的，而私有仓库只能给那些拥有访问权限的成员使用。
      Docker Client可用于Docker Index内的镜像搜索。
